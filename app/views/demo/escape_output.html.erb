<!-- Reviewed and documented. -->
<% evil_string = "<script>alert('Gotcha!');</script>" %>
<% good_string = "<strong>Welcome to my site!</strong>" %>
<%= evil_string %><br />
<%= good_string %><br />
<hr />

<!-- One time -->
<%= raw(evil_string) %><br />
<%= raw(good_string) %><br />
<%= evil_string.html_safe? %><br />
<%= good_string.html_safe? %><br />
<hr />

<%= html_escape(evil_string) %><br />
<%= h(good_string) %><br />
<hr />

<!-- Mark it as safe once and Rails won't second guess it anymore -->
<% evil_string = evil_string.html_safe %>
<% good_string = good_string.html_safe %>
<%= evil_string.html_safe? %><br />
<%= good_string.html_safe? %><br />
<%= evil_string %><br />
<%= good_string %><br />
<hr />

<!-- After a text has been marked as safe, even h function won't escapte it -->
<%= html_escape(evil_string) %><br />
<%= h(good_string) %><br />

<hr />

<% simple_string = '<strong>Please</strong> visit <a href="http://example.com">us</a>.' %>
<%= simple_string %>
<hr />

<% simple_string = simple_string.html_safe %>
<%= simple_string.html_safe? %><br />
<%= simple_string %><br />
<hr />

<!-- strip_links function return an HTML unsafe string even though -->
<!-- its input string is HTML safe -->
<%= simple_string.html_safe? %><br />
<%= strip_links(simple_string) %><br />
<%= simple_string.html_safe? %><br />
<%= strip_tags(simple_string) %><br />

<hr />

<%= sanitize(evil_string) %><br />
<%= sanitize(simple_string, :tags => []) %><br />
<%= sanitize(simple_string, :tags => ['strong', 'em', 'a']) %><br />
